apiVersion: v1
kind: Namespace
metadata:
  name: {NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citrix-ingressgateway
  namespace: {NAMESPACE}
  labels:
    app: {INGRESSGATEWAY_LABEL}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {INGRESSGATEWAY_LABEL}
  template:
    metadata:
      labels:
        app: {INGRESSGATEWAY_LABEL}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        prometheus.io/port: "8888"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - name: exporter
        image: quay.io/citrix/citrix-adc-metrics-exporter:1.2
        imagePullPolicy: IfNotPresent
        args:
        - "--target-nsip={EXPORTER_NSIP}"
        - "--port=8888"
        - "--log-level=ERROR"
      - name: istio-adaptor
        image: {ISTIO_ADAPTOR_IMAGE}:{ISTIO_ADAPTOR_IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: APPLICATION_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: NS_USER
          value: nsroot
        - name: NS_PASSWORD
          value: nsroot
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-certs # Make sure that Gateway definition has this path mentioned in server.tls section for SIMPLE TLS
          name: citrix-ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs # Make sure that Gateway definition has this path mentioned in server.tls section for MUTUAL TLS
          name: citrix-ingressgateway-ca-certs
          readOnly: true
        - mountPath: /etc/nslogin 
          name: nslogin
          readOnly: true
        args: 
        - -pilot-location
        - istio-pilot.istio-system:15011
        - -proxy-type
        - router
        - -netscaler-url
        - "http://127.0.0.1"
        # Subject Alternative Name for istio-pilot which SPIFFE ID of the Istio Pilot in given case.
        # The format of this SPIFFE ID is spiffe://<spiffe_trustDomain>/ns/<namespace_of_istio-pilot>/sa/<serviceaccount_of_istio-pilot>
        # By default, trustDomain is cluster.local. Namespace is istio-system. SA: istio-pilot-service-account
        # Default value of pilotSAN spiffe://cluster.local/ns/istio-system/sa/istio-pilot-service-account
        - -pilot-SAN
        - spiffe://cluster.local/ns/istio-system/sa/istio-pilot-service-account
        - -secure-connect=true
        - -adm-ip
        - {LS_IP}
      - name: citrix-ingressgateway
        image: {CPX_IMAGE_NAME}:{CPX_IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        ports:
          - containerPort: 80
          - containerPort: 443
        env:
        - name: "EULA"
          value: "yes"
        - name: "NS_CPX_LITE"
          value: "yes"
        - name: "KUBERNETES_TASK_ID"
          value: ""
        # Provide the Citrix Application Delivery Management (ADM) IP address and Port to license Citrix ADC CPX. Default port is 27000
        - name: "LS_IP"
          value: {LS_IP}
        - name: "LS_PORT"
          value: "{LS_PORT}" 
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      volumes:
      - name: nslogin
        secret:
          optional: true
          secretName: nslogin
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
      - name: citrix-ingressgateway-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
      - name: citrix-ingressgateway-ca-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-ca-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
    name: citrix-ingressgateway
    namespace: {NAMESPACE}
spec:
    maxReplicas: 3
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: citrix-ingressgateway
---
apiVersion: v1
kind: Service
metadata:
  name: citrix-ingressgateway
  namespace: {NAMESPACE}
  annotations:
  labels:
    app: {INGRESSGATEWAY_LABEL}
spec:
  type: LoadBalancer
  selector:
    app: {INGRESSGATEWAY_LABEL}
  ports:
    -
      name: http2
      nodePort: 30380
      port: 80
      targetPort: 80
    -
      name: https
      nodePort: 30443
      port: 443
---
kind: Service
apiVersion: v1
metadata:
   name: exporter
   namespace: {NAMESPACE}
   annotations:
   labels:
     service-type: citrix-adc-monitor
spec:
   selector:
     app: {INGRESSGATEWAY_LABEL}
   ports:
   - name: exporter-port
     port: 8888
     targetPort: 8888
---
