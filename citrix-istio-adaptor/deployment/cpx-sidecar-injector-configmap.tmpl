# Configmap to inject istio-adaptor and cpx as sidecar containers
apiVersion: v1
kind: ConfigMap
metadata:
  name: cpx-istio-sidecar-injector
  namespace: {NAMESPACE}
  labels:
    app: istio
    istio: sidecar-injector
data:
  config: |-
    policy: enabled
    template: |-
      containers:
      - name: istio-adaptor
        image: {ISTIO_ADAPTOR_IMAGE}:{ISTIO_ADAPTOR_IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: APPLICATION_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: NS_USER
          value: nsroot
        - name: NS_PASSWORD
          value: nsroot
        args:
        - -pilot-location
        - istio-pilot.istio-system:15011
        - -proxy-type
        - sidecar
        # Subject Alternative Name for istio-pilot which SPIFFE ID of the Istio Pilot in given case.
        # The format of this SPIFFE ID is spiffe://<spiffe_trustDomain>/ns/<namespace_of_istio-pilot>/sa/<serviceaccount_of_istio-pilot>
        # By default, trustDomain is cluster.local. Namespace is istio-system. SA: istio-pilot-service-account
        # Default value of pilotSAN spiffe://cluster.local/ns/istio-system/sa/istio-pilot-service-account
        - -pilot-SAN
        - spiffe://cluster.local/ns/istio-system/sa/istio-pilot-service-account
        - -netscaler-url
        - "http://127.0.0.1"
        - -secure-connect=true
        - -adm-ip
        - {LS_IP}
        volumeMounts:
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
        - mountPath: /etc/nslogin 
          name: nslogin
          readOnly: true
      - name: cpx-proxy
        image: {CPX_IMAGE_NAME}:{CPX_IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
        - name: "EULA"
          value: "YES"
        - name: "CPX_SIDECAR_MODE"
          value: "YES"
        - name: "KUBERNETES_TASK_ID"
          value: ""
        - name: "NS_CPX_LITE"
          value: "YES"
        # Note: By default, management http and https ports run on ports 9080 and 9443 resp.
        # Use below ENV variables to change it to some values
        # If backend application is running on 10080 and 10443, folowing values need to be changed.
        - name: "MGMT_HTTP_PORT"
          value: 10080
        - name: "MGMT_HTTPS_PORT"
          value: 10443
        # Provide the Citrix Application Delivery Management (ADM) IP address and Port to license Citrix ADC CPX. Port 27000 is default. 
        - name: "LS_IP"
          value: {LS_IP}
        - name: "LS_PORT"
          value: "{LS_PORT}" 
      volumes:
      - name: nslogin
        secret:
          optional: true
          secretName: nslogin
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
---
# Empty configmap for meshConfig.
# TODO: Check if wrong file can be specified or not
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio
  namespace: {NAMESPACE}
  labels:
    app: istio
    chart: istio-1.0.0
    release: RELEASE-NAME
    heritage: Tiller
data:
  mesh: |-
# empty file

---
